<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemy0</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprEnemy0Mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hlth = 3;
activated = 0; 
shootTimer = 10;
sinTimer = 0;
if (enemy_modifier_get(MODIFIER_RANDOM_FIRE) != 0){
   shootTimer = random(enemy_modifier_get(MODIFIER_RANDOM_FIRE)); 
}
sinM = 0;
if (enemy_modifier_get(MODIFIER_SIN_X) != 0){
   sinM = enemy_modifier_get(MODIFIER_SIN_X);
}
single = 1;
if (enemy_modifier_get(MODIFIER_DOUBLE_FIRE)){
   single = 0;
}
dY = global.enemyModifier[MODIFIER_Y_VELOCITY];

if (global.enemyModifier[MODIFIER_VELOCITY_CONVEX]){
   dY *= 1 + (5 - abs(320 - x) / 32) / 3;
}
dX = 0;

particleTimer = 1;
dead = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y += dY * GAME_SPEED;
sinTimer += GAME_SPEED;
if (!dead){
    if (sinM &gt; 0){
       x = xstart + (sin(sinTimer / 10) * sinM);
    }
    if (y &gt; -10){
        var a = instance_place(x, y, objBullet) 
        if (a != noone){
           if (a.players){
               hlth -= 1;
               if (hlth &lt;= 0){
                   heal(20 + global.sloMo * 2);
                   global.comboMultiplier ++;
                   add_score(20);
                   explode();
               }
               with (a) instance_destroy()
           }
        }
        
        if (y &gt; 0){
           particleTimer --;
    
           if (particleTimer &lt;= 0){
               a = instance_create(x + random_range(-2, 2), y - 5, objCircleParticle);
               a.dY = -.45;
               particleTimer = 1 + 60 - fps;
           }
    
           
        }
        shootTimer -= GAME_SPEED;
        if (shootTimer &lt;= 0){
           if (!single){ 
               var a = instance_create(x - 8, y + 3, objBullet);
               a.players = false;
               a.dY = 5;
               var a = instance_create(x + 8, y + 3, objBullet);
               a.players = false;
               a.dY = 5;
               shootTimer = 60;
               if (enemy_modifier_get(MODIFIER_RANDOM_FIRE) != 0){
                  shootTimer = random_range(5, enemy_modifier_get(MODIFIER_RANDOM_FIRE)); 
               }
               play_sound_at_volume_random(sndShootEnemy, .8, .9, 1.1);
           }else{
               var a = instance_create(x, y + 3, objBullet);
               a.players = false;
               a.dY = 5;  
               shootTimer = 30;  
               if (enemy_modifier_get(MODIFIER_RANDOM_FIRE) != 0){
                  shootTimer = random_range(5, enemy_modifier_get(MODIFIER_RANDOM_FIRE)); 
               }
               play_sound_at_volume_random(sndShootEnemy, .8, .9, 1.1);
           }
        }
    }
    
    if (y &gt; room_height + 100){
       instance_destroy();
    }
}else{
    image_alpha -= .3 * GAME_SPEED;
    if (image_alpha &lt;= 0) instance_destroy();  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
